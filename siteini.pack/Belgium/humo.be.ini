**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: humo.be
* @MinSWversion: V2.1.4
* @Revision 11 - [29/10/2025] doglover
* @Revision 10 - [16/05/2025] doglover
* @Revision 9 - [21/01/2021] doglover
*	Website changes
* @Revision 8 - [31/08/2020] doglover
* @Revision 7 - [01/02/2020] doglover
*  Fixed movie details
* @Revision 6 - [27/02/2020] doglover
*  Fixed starttime
* @Revision 5 - [04/02/2020] doglover
*  New website
* @Revision 4 - [25/03/2019] doglover
* @Revision 3 - [09/11/2013] Francis De Paemeleere
*  update
* @Revision 2 - [28/02/2013] Francis De Paemeleere
*   new site implementation
* @Remarks:
*   .channels.xml generation not fully automatic!
* @header_end
**------------------------------------------------------------------------------------------------
site {url=humo.be|timezone=GMT|maxdays=8.1|cultureinfo=nl-BE|charset=windows-1252|titlematchfactor=50}
url_index{url()|https://www.humo.be/tv-gids/|channel|}
urldate.format {datestring|yyyy-MM-dd}

global_temp_6.modify {calculate(format=utcdate,unix)|'today'}
scope.range{(splitindex)|end}
index_showsplit.scrub {multi (include="from")|window.__EPG_REDUX_DATA__|"uuid"||"channelDetail"}
index_showsplit.modify {replace (type=regex)|\s\!\?\?\!\s| }
loop{(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "fromIso":"(.*?)",}
index_temp_8.modify {replace|T| }
index_temp_8.modify {calculate(format=utcdate,unix)|'index_temp_8'}
index_showsplit.modify {remove('index_temp_8' < 'global_temp_6')|'index_temp_9'}
end_loop
index_showsplit.modify {replace|\||#} 
index_showsplit.modify {remove (type=regex)|##+}
index_showsplit.modify {replace|#|\|} 
end_scope
*index_showsplit.modify {(debug)}
scope.range                {(indexshowdetails)|end}
index_start.scrub {single ()|"fromIso":|"|",|,}
index_start.modify {replace|T| }
index_title.scrub             {single|"title":"||"|}
index_temp_5.scrub {single (exclude="Aflevering")|"alternativeDetailTitle":"||",|",}
index_temp_1.scrub       {single|"synopsis":"||"|}
index_temp_6.scrub       {single ()|"live":||,|,}
index_title.modify	{addstart ('index_temp_6' = "true")|LIVE: }
index_category.scrub          {multi|"genre":"||",}
index_category.scrub          {multi|"subGenres":[|"|"|]}
index_title.modify            {cleanup}
index_category.modify         {cleanup}
index_category.modify         {remove|"}
index_temp_3.scrub {single|"playableType":"||",|",}
global_temp_1.modify {clear}
index_temp_1.modify {set ('index_temp_3' = "episodes")|episode}
index_temp_1.modify {set ('index_temp_3' = "movies")|movie}
index_temp_2.scrub {single|:"||",|"channelUuid":}
index_urlshow.modify {addstart ('index_title' not~ "Geen uitzending")|https://www.humo.be/tv-gids/api/v2/detail/'index_temp_1'/'index_temp_2'}
end_scope
*
title.modify {addstart|'index_title'}
subtitle.scrub {single (exclude="Aflevering")|"subtitle":"||",|",}
subtitle.modify {remove ()|'index_temp_5'}
temp_1.scrub {single|"synopsisM":"||",|",}
description.scrub {single|"synopsisS":"||",|",}
temp_4.scrub {single|"synopsisOriginal":"||",|",}
description.modify {addstart ('description' = "")|'temp_1'}
description.modify {addstart ('description' = "")|'temp_4'}
actor.scrub {multi|"Acteurs"|{"name":|,"order"|}]}
actor.modify {replace |"characters":| - }
actor.modify {remove |"}
actor.modify {remove |[}
actor.modify {remove |]}
actor.modify {remove |,}

episode.scrub {single (exclude="null")|"subtitle"|"order":|,"|"seasonUuid"}
episode.modify {addstart ('episode' not "")|E}
temp_2.scrub {single (exclude="null")|"seasonTotalNumberOfEpisodes":||,"|,"}
temp_3.scrub {single (exclude="null")|"seasonOrder":||,"|,"}
temp_3.modify {addstart ('temp_3' not "")|S}
episode.modify {addstart ('temp_3' not "")|'temp_3'}
episode.modify {addend ('temp_2' not "")|/'temp_2'}
productiondate.scrub {single|"productionYear":||,"|,"}

subtitle.modify         {cleanup}
description.modify      {cleanup}
actor.modify            {cleanup}
category.modify         {cleanup}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url()|file://Humo.be.Channels.txt}
**url_index{url()|https://www.humo.be/tv-gids/api/v2/broadcasts/|urldate|}
*index_site_id.scrub {regex ()||\{"name":.*?"uuid"||}
*index_site_channel.modify {substring (type=regex)|'index_site_id' "name":"(.*?)",}
*index_site_id.modify {substring (type=regex)|'index_site_id' "seoKey":"(.*?)",}
*index_site_id.modify {cleanup( removeduplicates=equal,100 link="index_site_channel")}
*}}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_subtitle.modify {cleanup}
index_temp_4.modify {set|'index_category'}
index_temp_5.modify {set|'index_subtitle'}
index_temp_6.modify {set|'index_episode'}
index_temp_7.modify {set|'index_productiondate'}
index_temp_8.modify {set|'index_rating'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('episode' not "") | ║ 'episode'}
temp_9.modify {addstart ('index_temp_6' not "") | ║ 'index_temp_6'}
temp_9.modify {addend ('subtitle' not "") | ║ 'subtitle'}
temp_9.modify {addend ('index_temp_5' not "") | ║ 'index_temp_5'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('index_temp_4' not "" separator=", ") | ║ 'index_temp_4'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('index_temp_7' not "") | ║ 'index_temp_7'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('index_temp_8' not "") | ║ 'index_temp_8'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 120}
subtitle.modify {substring(type=char)|'subtitle' 0 120}
index_title.modify {substring(type=char)|'index_title' 0 120}