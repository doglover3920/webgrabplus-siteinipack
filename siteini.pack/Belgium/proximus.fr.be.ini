**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: proximus.be
* @MinSWversion: V2.1
* @Revision 1 - [28/05/2021] doglover
*   Update
* @Revision 0 - [29/11/2016] doglover
*   creation
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=proximus.be|timezone=UTC|maxdays=7.1|cultureinfo=nl-BE|charset=UTF-8|titlematchfactor=50|firstshow=1}
url_index{url()|https://api.proximusmwc.be/v2/graphql?query=query($language:String!$startTime:Int!$endTime:Int!$options:SchedulesByIntervalOptions){schedulesByInterval(language:$language startTime:$startTime endTime:$endTime options:$options){trailId accessLevel programReferenceNumber channelId channel title startTime endTime timePeriod image{key url __typename}imageOnErrorHandler parentalRating detailUrl ottBlackListed cloudRecordable grouped description shortDescription category translatedCategory categoryId formattedStartTime formattedEndTime subCategory scheduleTimeFormat links{episodeNumber id seasonId seasonName seriesId seriesTitle title type __typename}seriesId __typename}}&variables={"endTime":##endtime##,"language":"fr","options":{"channelIds":["|channel|"]},"startTime":|urldate|}}
urldate.format {datenumber|unix|0}

scope.range{(urlindex)|end}
index_variable_element.modify {calculate(format=F1)|'config_timespan_days' 1 +}
index_variable_element.modify {calculate(format=timespan,days)}
index_temp_1.modify {calculate(format=date,yyyy/MM/dd)|'now'}
index_temp_1.modify {calculate(format=date,unix)}
index_temp_2.modify {calculate(format=date,unix)|'index_temp_1' 'index_variable_element' +}
*url_index.modify {replace|##start##|'index_temp_1'}
url_index.modify {replace|##endtime##|'index_temp_2'}
end_scope

index_showsplit.scrub {multi()|"trailId"||}
*
index_start.scrub {single()|"startTime"|:|,}
index_stop.scrub {single()|"endTime"|:|,}
index_title.scrub {single()|"title":"||"}
index_description.scrub {single()|"description":|"|"}
index_title.modify {cleanup}
index_title.modify {remove|\}
index_description.modify {cleanup}
index_description.modify {remove|\}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**	Request: https://api.proximusmwc.be/v2/graphql - Getchannels POst
**  in a browser and save the file in the WG++ workfolder as:  graphql.json
** @auto_xml_channel_start
*url_index{url()|file://graphql.json}
*index_site_channel.scrub {multi|"name":"||"|}
*index_site_channel.modify {cleanup}
*index_site_id.scrub {multi|"id":"||"|}
** @auto_xml_channel_end
