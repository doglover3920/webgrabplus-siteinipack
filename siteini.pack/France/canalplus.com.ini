**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: https://www.canalplus.com/xx/programme-tv/  
* @Revision 0 - [16/10/2023] doglover
*	creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=canalplus.com/|timezone=UTC|maxdays=7|cultureinfo=fr|charset=UTF-8|titlematchfactor=90|retry=<retry time-out="10">2</retry>}
url_index{url()|https://hodor.canalplus.pro/api/v2/mycanal/channels/|channel|/broadcasts/day/|urldate|}
url_index.headers {referer=https://www.canalplus.com/}
url_index.headers {origin=https://www.canalplus.com}
urldate.format {list|0|1|2|3|4|5|6|7}
*
global_temp_6.modify {calculate(format=utcdate,java)|'now'}
scope.range {(splitindex)|end}
index_showsplit.scrub {multi()|"contentID":||}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "startTime":(.*?),} 
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"startTime":||,|,}
*index_showsplit.modify {(debug)}
loop{(each "index_temp_7" in 'index_showsplit')|end}
index_temp_6.modify {substring(type=regex)|'index_temp_7' "startTime":(\d+),}
index_showsplit.modify {remove('index_temp_6' < 'global_temp_6')|'index_temp_7'}
end_loop
end_scope
*index_showsplit.modify {(debug)}
index_title.scrub {single|"title":"||",|",}
index_start.scrub {regex||"startTime":(\d+)||}
index_title.modify{remove(type=regex)|" - Saison \d+$"}
*index_showicon.modify {remove|{resolutionXY}/filters:quality({imageQualityPercentage})/}
index_urlshow {url ()||"URLPage":"||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow.modify {cleanup(style=unidecode)}
index_urlshow.modify {cleanup(style=jsondecode)}
title.modify {addstart|'index_title'}
subtitle.scrub {single(exclude="[?]pisode")|subtitle":"||",|",}
category.scrub{single|"genre":"||",|",}
category.scrub{single(exclude="[?]pisode")|"subgenre":"||",|",}
category.modify {remove|'subtitle'}
productiondate.scrub {single|"productionYear":"||",|",}
*productiondate.scrub{regex||"consumptionPlatform":"[^"]*","editorialTitle":".*?(\d{4}).*?",||}
productiondate.scrub{regex||"editorialTitle":".*?(\d{4}).*?",||}
productiondate.modify {cleanup(removeduplicates)}
*country.scrub{multi (separator="," exclude="Emission""min")|"detail":|"editorialTitle":"|",|}}
country.scrub{multi (separator=",")|"detail":|"editorialTitle":"|",|},}
country.modify {remove|'productiondate'}
country.modify {remove|'subtitle'}
country.modify {remove|'category'}
country.modify {remove (type=regex)|\d+h\d+}
country.modify {replace ()|\||#}
country.modify {remove (type=regex)|^\#}
country.modify {remove ()|# #}
country.modify {replace|#|\|}
country.modify {cleanup(removeduplicates)}
country.modify {cleanup}
description.scrub {single|"selectedEpisode"|"summary":"|","|]}}}}
temp_1.scrub {single|"summary":"||",|",}
description.modify {addend("")|'temp_1'}
description.modify {cleanup(style=jsondecode)}
director.scrub {multi|{"prefix":"De :","personnalitiesList":[|"title":"|"|]}}
actor.scrub {multi(max=6)|{"prefix":"Avec :","personnalitiesList":[|"title":"|"|]}}
writer.scrub {multi|{"prefix":"Scénario :","personnalitiesList":[|"title":"|"|]}}
productiondate.scrub {single|"productionYear":"||",|",}
rating.scrub {single|"parentalRatings":[|{"value":"|",|]}
episode.scrub {regex()||"selectedEpisode":{"episodeNumber":(\d+),"seasonNumber":\d+,"||}
*}}
temp_2.scrub {regex()||"selectedEpisode":{"episodeNumber":\d+,"seasonNumber":(\d+),"||}
*}
temp_2.modify {addstart ('temp_2' not "")|S}
episode.modify {addstart ('episode' not "")|E}
episode.modify {addstart ('temp_2' not "")|'temp_2'}
subtitle.modify {remove|'category'}
category.modify {cleanup}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url()|https://hodor.canalplus.pro/api/v2/mycanal/epgGrid/|subpage|/day/0?channelImageColor=white}
*subpage.format {list|cfce993bc7fd98565fd0a49ef66ff583|df30f51f73467b65b7af55666113092f|df95cabc2cb04c565c7ae8fe5496c801|7fe0a8f969cc0b37932f69ccf5e609e4|bddf78648f0f86f8957a6567848a616f|c503b468728808c0d19aa5a4b8e6adc9|9a96e305bab166516a1d41197c25ebfa|6d90f8c2fa70c17d4c4545aa78655175|33246b4d41df1021da97ddd41854df21|e38bd3cbf6f6ecb21bafdb1c71a8f878}
*index_site_id.scrub {multi|}
*index_temp_8.scrub {regex ()||"name":".*?"zapNumber"||}
*loop{(each "index_temp_9" in 'index_temp_8')|end}
*index_temp_9.modify {replace ('index_temp_9' ~ "cfce993bc7fd98565fd0a49ef66ff583")|"name":"|"name":"Maurice - }
*index_temp_9.modify {replace ('index_temp_9' ~ "df30f51f73467b65b7af55666113092f")|"name":"|"name":"Guadaloupe - }
*index_temp_9.modify {replace ('index_temp_9' ~ "df95cabc2cb04c565c7ae8fe5496c801")|"name":"|"name":"Cote d'Ivoire - }
*index_temp_9.modify {replace ('index_temp_9' ~ "7fe0a8f969cc0b37932f69ccf5e609e4")|"name":"|"name":"Reunion - }
*index_temp_9.modify {replace ('index_temp_9' ~ "bddf78648f0f86f8957a6567848a616f")|"name":"|"name":"Naouvelle Caledonie - }
*index_temp_9.modify {replace ('index_temp_9' ~ "c503b468728808c0d19aa5a4b8e6adc9")|"name":"|"name":"France - }
*index_temp_9.modify {replace ('index_temp_9' ~ "9a96e305bab166516a1d41197c25ebfa")|"name":"|"name":"Guyane - }
*index_temp_9.modify {replace ('index_temp_9' ~ "6d90f8c2fa70c17d4c4545aa78655175")|"name":"|"name":"Madagaskar - }
*index_temp_9.modify {replace ('index_temp_9' ~ "e38bd3cbf6f6ecb21bafdb1c71a8f878")|"name":"|"name":"Suisse - }
*index_temp_9.modify {replace ('index_temp_9' ~ "33246b4d41df1021da97ddd41854df21")|"name":"|"name":"Cameroun - }

*index_variable_element.modify {addend|##'index_temp_9'}
*end_loop
*index_temp_8.modify {clear}
*index_variable_element.modify {remove|^##}
*index_variable_element.modify {replace|##|\|}
*index_site_id.modify {substring (type=regex)|'index_variable_element' "URLChannelSchedule":"https://hodor.canalplus.pro/api/v2/mycanal/channels/(.*?)/broadcasts/day/0",}
*index_site_channel.modify {substring (type=regex)|'index_variable_element' "name":"(.*?)",}
** @auto_xml_channel_end

*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_subtitle' not "") |'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
*index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('subtitle' not "") |'subtitle'}
temp_9.modify {addend ('index_temp_9' not "") | ║ 'index_temp_9'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('episode' not "") | ║ 'episode'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}
