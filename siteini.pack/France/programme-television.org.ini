**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: programme-television.org
* @MinSWversion: V2.1
* @Revision 5 - [14/12/2022] doglover *added date scrubbing
* @Revision 4 - [14/01/2022] doglover *fixed showsplit
* @Revision 3 - [27/08/2019] doglover *fix detail pages
* @Revision 2 - [31/10/2018] WgTeam *fix duplicates titles
* @Revision 1 - [07/03/2018] Mat8861 *fix duplicates
* @Revision 0 - [24/08/2017] Mat8861 & Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=programme-television.org|timezone=Europe/Paris|maxdays=7|cultureinfo=fr-FR|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
urldate.format {datestring|yyyyMMdd} 
subpage.format {list|1|2|3|4|5|6}
url_index{url ()|https://www.programme-television.org/grid/tranches/|channel|_|urldate|_t|subpage|.json}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate} 
*
index_date.scrub {single (force pattern=date,"yyyy-MM-dd" include=first)|"dateGrille":"||"|",}
*index_showsplit.modify {(debug)}
global_temp_4.modify {set|1}
scope.range {(splitindex)|end}
index_showsplit.scrub {multi (sort )|{"grille":|{"na||]}});}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "heureDif":"\d{2}h\d{2}","} 
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
global_temp_1.modify {calculate (format=date,"yyyy-MM-dd")|'now'}
global_temp_2.modify {calculate (format=date,unix)|'global_temp_1' 00:04 +}

loop{(each "global_temp_9" in 'index_showsplit' max=6)|end}
global_temp_3.modify {substring (type=regex)|'global_temp_9' \"heureDif\":\"(\d{2}h\d{2})\"}
global_temp_3.modify {replace|h|:}
global_temp_3.modify {addstart|'global_temp_1' }
global_temp_3.modify {calculate (format=date,unix)|'global_temp_3'}
index_showsplit.modify {remove ('global_temp_3' <  'global_temp_2')|'global_temp_9'}
global_temp_4.modify {calculate (format=F0)|'global_temp_4' 1 +}
end_loop

end_scope

*index_showsplit.modify {(debug)}

index_start.scrub {single|"heureDif":"||",}
index_start.modify {replace|h|:}
index_start.modify {calculate ('config_xmltv_id' ~ "plus1" format=date,"HH:mm")|00:01 +}
index_title.scrub {single|"titre":"||"} 
index_subtitle.scrub {single|"soustitre":"||",}
*index_showicon.scrub {single|"photo":"||"}

index_temp_2.scrub {single|"saison"|"|"|"serie"}
index_temp_2.modify {remove|serie}
index_episode.scrub {single|"numEpi"|"|"|"saison"}
index_episode.modify {remove|saison}
index_episode.modify {addstart ('index_episode' not "")|E}
index_episode.modify {addstart ('index_temp_2' not "")|S'index_temp_2'}
index_category.scrub{single|ture":"||",}
*
index_urlshow {url ()|https://www.programme-television.org/getinfos/|"urlDiff|#|"|,}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate} 

country.scrub {single|Pays de production :|</strong>|</li>|</li>}
title.modify {addstart|'index_title'}
description.scrub {single|<div class=\"bloc_cnt tsj145bloctitre\">||<\/div>|<\/div>} 
description.modify {cleanup(tags="<"">")}
productiondate.scrub {single|<li class=\"tsj145sub\"><\/li>||<\/li>}
actor.scrub {multi (separator=",")|id=\"bcinfos\">|<strong>Avec :<\/strong>|<\/li>}
actor.modify {cleanup(tags="<"">")}
director.scrub {multi |id=\"bccasting\">|<span class=\"texte\">|<em>R\u00e9alisateur<\/em>|<\/div>}
director.modify {cleanup(tags="<"">")}
director.modify {remove|\\n}
actor.modify {remove|\\n}
description.modify {remove|\\n}
description.modify {remove|\}
subtitle.modify {cleanup}
description.modify {cleanup}
productiondate.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|http://www.programme-television.org/bouquets-tv/toutes-les-chaines}
*index_site_id.scrub {multi|Grandes Chaînes|rel="|" class="|<!-- /bloc bloc_guidetv -->}
*index_site_channel.scrub {multi|Grandes Chaînes|class="texte_cnt"><span>|</span></span></span></span>|<!-- /bloc bloc_guidetv -->}
*index_site_channel.modify {replace|'| } *needed by channel L'Equipe
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
*For classical credits - remove the next lines
title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}

subtitle.modify {addstart ('titleoriginal' not "") | ('titleoriginal')}
subtitle.modify {addend ('episode' not "") | ('episode')}
subtitle.modify {addend ('productiondate' not "") | ('productiondate')}
subtitle.modify {addstart ('category' not "" separator=", ") |['category'] }
subtitle.modify {addend ('rating' not "") | ['rating'] }
subtitle.modify {addend ('country' not "") | ['country'] }

rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}