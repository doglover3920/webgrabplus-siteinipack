**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: magenta.at
* @MinSWversion: V2.1.4
* @Revision 4 - [28/09/2023] doglover
* Alternative api call
* @Revision 3 - [16/07/2023] doglover
* @Revision 2 - [19/10/2022] doglover
* @Revision 1 - [13/10/2022] doglover
*	New website
* @Revision 0 - [30/06/2017] doglover
* @Remarks:
*  
* @header_end
**------------------------------------------------------------------------------------------------
site {url=magenta.at|timezone=GMT|maxdays=7|cultureinfo=de|charset=utf-8|titlematchfactor=90|retry=<retry time-out="8">2</retry>|keepindexpage}
url_index {url ()|http://192.168.178.53/magenta_at.php?req=1&date=|urldate|&subpage=|subpage|&appkey=##appkey##&device=##device##&station=##station-id##&sessionId=##sessionId##}
urldate.format {datestring|yyyy-MM-dd}
subpage.format {list|0|3|6|9|12|15|18|21}
urldate.format {datestring|yyyy-MM-dd}
global_temp_3.modify {set|'config_site_id'}
global_temp_6.modify {set('global_temp_1' = "" type=run)|curl.exe|-s -i "https://tv.magenta.at/epg" --compressed -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8" -H "Accept-Language: nl,en-US;q=0.7,en;q=0.3" -H "Accept-Encoding: gzip, deflate, br" -H "Connection: keep-alive"  -H "Upgrade-Insecure-Requests: 1" -H "Sec-Fetch-Dest: document" -H "Sec-Fetch-Mode: navigate" -H "Sec-Fetch-Site: cross-site" -H "Sec-GPC: 1" -H "TE: trailers"}
*global_temp_6.modify {(debug)}
global_temp_9.modify {substring (type=regex)|'global_temp_6' "DEVICE_ID":"(.*?)",}
global_temp_1.modify {substring (type=regex)|'global_temp_6' "CMS_CONFIGURATION_API_KEY":"(.*?)",}
global_temp_5.modify {substring (type=regex)|'global_temp_6' "NATCO_KEY":"(.*?)",}
global_temp_8.modify {substring (type=regex)|'global_temp_6' set-cookie: sessionId=(.*?);}
url_index.modify {replace|##station-id##|'global_temp_3'}
url_index.modify {replace|##appkey##|'global_temp_1'}
url_index.modify {replace|##device##|'global_temp_9'}
url_index.modify {replace|##sessionId##|'global_temp_8'}
*}}
index_showsplit.scrub {regex ()||("'global_temp_3'":.*?\}\],")\d{12}"||}
scope.range {(splitindex)|end}
index_showsplit.modify {replace|\},\{"program_id"|\}\|\{"program_id"}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"start_time\":\"([^\"]*)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"start_time":"||.00|00Z"}
index_stop.scrub {single|"end_time":"||.00|00Z"}
index_title.scrub {single|"description":"||","|","}
index_subtitle.scrub{single(exclude="Folge")|"episode_name":"||",|",}
index_productiondate.scrub{single|"release_year":||,"|,"}
index_category.scrub{multi(max=2)|"genres":[|"name":"|"|]}
index_rating.scrub{regex||"ratings":"([1-9]*)",||}
index_temp_2.scrub{regex||"episode_number":"([1-9]\d*)",||}
index_episode.scrub {regex()||"season_display_number":"(?:Staffel )?([1-9]\d*)","||}
index_episode.modify{addstart(not "")|S}
index_episode.modify{addend('index_temp_2' not "")|E'index_temp_2'}
index_temp_3.scrub{single|"program_id":"||",|",}
index_urlshow.modify {addstart|http://192.168.178.53/magenta_at.php?req=2&progam_id='index_temp_3'?natco_key='global_temp_5'&appkey='global_temp_1'&device='global_temp_9'&sessionId='global_temp_8'}
title.scrub {single|"name":"||","|","}
title.modify {addstart ('title' = "")|'index_title'}
description.scrub {single|"details":{|"description":"|","|","} 
description.modify{replace|\\"|"}
director.scrub {multi|{"role_name":"Regisseur","person_id":"|"person_name":"|","|}}
director.scrub {multi()|{"role_name":"Künstlerischer Leiter","person_id":"|"person_name":"|","|}}
actor.scrub {multi()|{"role_name":"Schauspieler","person_id":"|"person_name":"|","|}}
actor.scrub {multi()|{"role_name":"Casting","person_id"|"person_name":"|","|}}
description.modify {cleanup(style=jsondecode)}
description.modify {cleanup(style=jsondecode)}
*}
*  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
*      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
* Open https://tv.magenta.at/epg in a browser.
* Go to https://tv-at-prod.yo-digital.com/at-bifrost/epg/channel?channelMap_id=&app_language=de&natco_code=at
* Copy the result of channels-magenta.at.json in the work folder
** @auto_xml_channel_start
*url_index{url()|file://channels-magenta.at.json}
*index_site_id.scrub {multi()|"channel_number":|"station_id": "|",|"is_adult"}
*index_site_channel.scrub {multi ()|"channel_number":|"title": "|",|"is_adult"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url ()|http://192.168.178.53/magenta_at.php?req=3&natco_key=##natco##&appkey=##appkey##&device=##device##&sessionId=##sessionId##}
*global_temp_6.modify {set('global_temp_1' = "" type=run)|curl.exe|-s "https://tv.magenta.at/epg" --compressed -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8" -H "Accept-Language: nl,en-US;q=0.7,en;q=0.3" -H "Accept-Encoding: gzip, deflate, br" -H "Connection: keep-alive"  -H "Upgrade-Insecure-Requests: 1" -H "Sec-Fetch-Dest: document" -H "Sec-Fetch-Mode: navigate" -H "Sec-Fetch-Site: cross-site" -H "Sec-GPC: 1" -H "TE: trailers"}
*global_temp_6.modify {(debug)}
*global_temp_9.modify {substring (type=regex)|'global_temp_6' "DEVICE_ID":"(.*?)",}
*global_temp_1.modify {substring (type=regex)|'global_temp_6' "CMS_CONFIGURATION_API_KEY":"(.*?)",}
*global_temp_5.modify {substring (type=regex)|'global_temp_6' "NATCO_KEY":"(.*?)",}
*url_index.modify {replace|##natco##|'global_temp_5'}
*url_index.modify {replace|##appkey##|'global_temp_1'}
*url_index.modify {replace|##device##|'global_temp_9'}
*global_temp_8.modify {substring (type=regex)|'global_temp_6' set-cookie: sessionId=(.*?);}
*url_index.modify {replace|##sessionId##|'global_temp_8'}
*subpage.format {list|}
*index_site_id.scrub {multi()|"channel_number":|"station_id":"|",|"is_adult"}
*index_site_channel.scrub {multi ()|"channel_number":|"title":"|",|"is_adult"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_subtitle' not "") |'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
*index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('subtitle' not "") |'subtitle'}
temp_9.modify {addend ('index_temp_9' not "") | ║ 'index_temp_9'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('episode' not "") | ║ 'episode'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}
