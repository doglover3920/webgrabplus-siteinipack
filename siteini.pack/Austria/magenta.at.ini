**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: magenta.at
* @MinSWversion: V2.1
* @Revision 2 - [19/10/2022] doglover
* @Revision 1 - [13/10/2022] doglover
*	New website
* @Revision 0 - [30/06/2017] doglover
* @Remarks:
*  
* @header_end
**------------------------------------------------------------------------------------------------
site {url=magenta.at|timezone=UTC|maxdays=7|cultureinfo=de|charset=utf-8|titlematchfactor=90}
site {keepindexpage|retry=<retry time-out="30">4</retry>}
url_index{url ()|https://static.spark.magentatv.at/deu/web/epg-service-lite/at/de/events/segments/|urldate||subpage|}

urldate.format {datestring|yyyyMMdd}
subpage.format{list|000000|060000|120000|180000}
url_index.headers {accept=application/json|contenttype=application/json}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
global_temp_2.modify {set|'config_site_id'}

scope.range{(splitindex)|end}
index_showsplit.scrub {multi()|{"channelId":"'global_temp_2'"|"audioLanguages":||}]}}
index_showsplit.modify {remove (type=regex)|"mergedId":".*?",}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "startTime":(\d{10}),} 
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"startTime":||,|,}
*index_showsplit.modify {(debug)}
end_scope

*
index_start.scrub {single|"startTime":||,|"}
index_title.scrub {single|"title":"||"|"}
index_temp_1.scrub {single ()|"i":"||",}
index_urlshow {url ()|https://prod.spark.magentatv.at/deu/web/linear-service/v2/replayEvent/|"id":"||"|",}
index_urlshow.modify {addend ('index_urlshow' not "")|?returnLinearContent=true&language=de}

index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}

title.scrub {single|"title":"||",|",}
*title.modify {addstart|'index_title'}
subtitle.scrub {single|"episodeName":"||"|"}
temp_5.scrub {single ()|"shortDescription":"||"|"}
description.scrub {single ()|"longDescription":"||"|"}
description.modify {addstart ('description' = "")|'temp_5'}
title.modify {addstart ('description' ~ "Liveverslag")|LIVE: }
director.scrub {multi(separator=",")|"directors":[||]|]}
director.modify {remove|"}
actor.scrub {multi(separator=",")|"actors":[||]|]}
actor.modify {remove|"}
category.scrub {multi(separator=",")|"genres":|[|]|]}
category.modify {remove|"}
category.modify {cleanup(style=name)}
category.modify {cleanup(removeduplicates=equal,100)}
*
temp_1.scrub {single ()|"episodeNumber":||,|,}
temp_1.modify {clear(> "10000")}
temp_1.modify {addstart ('temp_1' not "")|E}
temp_2.scrub {single|"seasonNumber":||,|,}
temp_2.modify {clear(> "10000")}
temp_2.modify {addstart ('temp_2' not "")|S}
temp_1.modify {addstart('temp_2' not "")|'temp_2'}
episode.modify {addstart('temp_1' not "")|'temp_1'}
productiondate.scrub {single|"productionDate":"||"|"}
country.scrub {multi (separator=",")|"countryOfOrigin":"||"|",}
*  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
*      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
*
** @auto_xml_channel_start
*url_index{url ()|https://prod.spark.magentatv.at/deu/web/linear-service/v2/channels?cityId=101&language=de&productClass=Orion-DASH}
*index_site_id.scrub {multi ()|"id":"||",|"logicalChannelNumber"}
*index_site_channel.scrub {multi|"id":"|"name":"|"|"logicalChannelNumber"}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
