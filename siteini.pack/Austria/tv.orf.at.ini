﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.orf.at
* @MinSWversion: V2.1
* @Revision 2 - [16/01/2022] doglover
*	New website - Needs curl
* @Revision 1 - [15/09/2019] doglover
*	Details fixed
* @Revision 0 - [15/11/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv.orf.at|timezone=Europe/Vienna|maxdays=14.1|cultureinfo=de-AT|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=AT|episodesystem=onscreen}
url_index{url ()|https://tv.orf.at/program/|channel|/index~_day-|subpage|.html}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*urldate.format {datestring|dd-MM-yyyy}
*
scope.range{(urlindex)|end}
global_temp_1.modify {calculate(format=date,"dd-MM-yyyy")|'now'}
global_temp_2.modify {set(type=run 'global_temp_2' = "")|curl.exe|-s "https://tv.orf.at/program/orf1/" -H "User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8" -H "Accept-Language: nl,en-US;q=0.7,en;q=0.3" -H "Accept-Encoding: gzip, deflate, br" -H "Connection: keep-alive" -H "Cookie: didomi_token=eyJ1c2VyX2lkIjoiMTdlNjFjNzYtM2IyMy02YzQ3LTgwYjUtZjUyZGMxZTI4ZjM0IiwiY3JlYXRlZCI6IjIwMjItMDEtMTZUMDc6MjY6MDkuNDIwWiIsInVwZGF0ZWQiOiIyMDIyLTAxLTE2VDA3OjI2OjA5LjQyMFoiLCJ2ZW5kb3JzIjp7ImVuYWJsZWQiOlsiZ29vZ2xlIiwiYzpvcmYtcDd6NG5URlciLCJjOm9lc3RlcnJlaWMtQURNWTlhZTIiLCJjOmFyYmVpdHNnZW0tTkgyZjJ0S20iXX0sInZlcnNpb24iOjIsImFjIjoiQ0d5QUdCQU1FREFJYkFBQS5BQUFBIn0=; euconsent-v2=CPS5dWuPS5dWuAHABBENB9CgAPLAAAAAAACYHNQIwADAAVAAuACCAE4AUAAsABkADSAIgAjQBNAE8AMQAfgBAgCEAEwAKgAaIA1QCEAETAIsATgAuoBgQD7AH6AQSAjUBX4CwwF5gMZAY2AywBzQAAACgkAGAAIIfjoAMAAQQ_JQAYAAgh-GgAwABBD8UABgACCH5SADAAEEPyAAGAAIIfiIAMAAQQ_GAAYAAgh-CAAwABBD8AAA.flgAAAAAAAAA" -H "Upgrade-Insecure-Requests: 1" -H "Sec-Fetch-Dest: document" -H "Sec-Fetch-Mode: navigate" -H "Sec-Fetch-Site: none" -H "Sec-Fetch-User: ?1" -H "Sec-GPC: 1"}
global_temp_2.modify {substring (type=regex)|'global_temp_2' href="/program/orf1/index~_day-'global_temp_1'.*?</ul>}
global_temp_2.modify {substring (type=regex)|'global_temp_2' href="/program/orf1/index~_day-(.*?).html}
global_temp_3.modify {substring (type=element)|'global_temp_2' 0 1}
global_temp_4.modify {substring (type=element)|'global_temp_2' 1 1}
global_temp_5.modify {substring (type=element)|'global_temp_2' 2 1}
global_temp_6.modify {substring (type=element)|'global_temp_2' 3 1}
global_temp_7.modify {substring (type=element)|'global_temp_2' 4 1}
global_temp_8.modify {substring (type=element)|'global_temp_2' 5 1}
index_temp_8.modify {substring (type=element)|'global_temp_2' 6 1}
subpage.format {list|'global_temp_3'|'global_temp_4'|'global_temp_5'|'global_temp_6'|'global_temp_7'|'global_temp_8'|'index_temp_8'}
end_scope

scope.range {(splitindex)|end}
index_showsplit.scrub {multi () |<ul id="broadcast-list"|<li  class="broadcast"||</ul>}
index_temp_1.modify {substring(type=regex)|'index_showsplit' data-start-time="(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:)} 
index_temp_1.modify {cleanup(removeduplicates span=4 link="index_showsplit")}
end_scope

*index_variable_element.modify {set|'config_site_id'}
*index_urlchannellogo.modify {addstart|http://tv.orf.at/imagesv2/tv_logo_'index_variable_element'_hl.png}
*
index_start.scrub {single|data-start-time="||+|"}
index_stop.scrub {single|data-end-time="||+|"}
*index_start.modify {cleanup(tags="<"">")}
index_title.scrub {single|<div class="series-title">|||</div>}
index_title.modify {cleanup(tags="<"">")}
index_subtitle.scrub {single|<div class="episode-title">|||</div>}
index_subtitle.modify {cleanup(tags="<"">")}
index_category.scrub {single|<div class="meta-data">|||</div>}
index_category.modify {cleanup(tags="<"">")}

index_urlshow {url|https://tv.orf.at|<div class="series-title">|<a href="|">|</a>}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
title.scrub {single|<h1 class="broadcast-series-title">||</h1>|</h1>}
titleoriginal.scrub {single|<h2 class="broadcast-original-title">||</h2>|</h2>}
title.modify {addstart("")|'index_title'}
titleoriginal.modify {remove|'title'}
description.scrub {multi|<h2>Inhalt||</p>|<figure class}
description.modify {replace|<p>|\n}
description.modify {cleanup(tags="<"">")}
description.scrub {single()|<p class="broadcast-programtext">||</p>|</p>}
director.scrub {single|<p class="job">Regie</p>|<p>|</p>|<p class="job">}
actor.scrub {multi()|<p class="job">Hauptdarsteller</p>|<p>|</p>|<p class="job">}}
writer.scrub {single|<p class="job">Drehbuch</p>|<p>|</p>|<p class="job">}
description.modify {replace|<br />|\n}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {multi|">Channels</a>|<li class=""><a href="/|/index.html"|/ul>}
*index_site_channel.scrub {multi|">Channels</a>|aria-hidden="true">|</a>|/ul>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end

