**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: guidatv.org
* @MinSWversion: 2.1.4
* @Revision 1  - [10/10/2025] doglover
* @Remarks:
* @header_end         ~ 
**------------------------------------------------------------------------------------------------
site {url=guidatv.org|timezone=UTC|maxdays=7|cultureinfo=it-IT|charset=UTF-8|titlematchfactor=90|keepindexpage}
global_temp_3.modify {set|'config_site_id'}
index_variable_element.modify {set|"name":"'config_display_name'"}
urldate.format {list|0|1|2|3|4|5|6}
url_index {url()|https://epgnew.guidatvoggi.it/v2/|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
scope.range                {(splitindex)|end}
index_showsplit.scrub {multi()|{"canale":{|||}
*}}
index_showsplit.modify {select ()|'index_variable_element' ~}
index_showsplit.modify {replace|\},\{\"id\":\"|\}\|\{\"id\":\"}
index_showsplit.modify {cleanup(style=jsondecode)}
index_showsplit.modify{remove(type=regex)|\!\?\?\!}
index_temp_1.modify {substring(type=regex)|'index_showsplit' \"inizio\":\"(.*?)Z\"}
*}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify    {(debug)}
end_scope
**********
index_start.scrub {single|"inizio":"||Z"|Z"}
index_title.scrub {single|"title":"||","|","} 
index_subtitle.scrub{single(exclude="Episode""Ep."|"tiEp":"||"|"}
index_subtitle.modify {clear('index_title')} 
index_description.scrub {single|"description":"||",|",}
index_category.scrub {multi(separator=",")|"category":"||",|",}
index_category.scrub {multi(separator="," max=1)|"genre":"||",|",}
index_category.modify {cleanup(style=name)}
index_director.scrub {multi(separator=", " exclude="ND")|"director":"||",|",}
index_actor.scrub {multi|"ac":[|{"n":"|}|]}
index_actor.modify {replace (type=regex)|",".*?"c":"| - }
index_actor.modify {remove (type=regex)|\",\".*?$}
index_actor.modify {remove ()|"}
index_productiondate.scrub {single|"year":"||",|",}
index_country.scrub {multi(separator="," max=2)|"pr":"||"|"}
index_rating.scrub{single|"rating":"||",|",}
index_temp_6.scrub {regex||"episode_number":([1-9]\d*),"||}
index_temp_6.modify{addstart(not "")|E}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"series_number":([1-9]\d*),"||}
index_episode.modify{addstart(not "")|S}
index_episode.modify{addend|'index_temp_6'}*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start  
*index_site_channel.scrub {regex||"name":"([^"]*)","(?:logo":"[^"]*",")?number":(?:"?)\d*(?:")?,||}
*index_site_id.scrub {regex||"name":"[^"]*","(?:logo":"[^"]*",")?number":(?:"?)(\d*)(?:")?,||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_subtitle' not "") | ║ 'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}
index_country.modify {clear}

index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 120}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 120}


index_title.modify {addend ('index_title' not "")|'global_temp_9'}
index_subtitle.modify {addend ('index_subtitle' not "")|'global_temp_9'}
index_description.modify {addend ('index_description' not "")|'global_temp_9'}

