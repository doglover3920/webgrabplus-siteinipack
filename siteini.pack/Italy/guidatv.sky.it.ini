**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: guidatv.sky.it
* @MinSWversion: V2.1.4
*   none
* @Revision 13- [08/06/2024] doglover
*	Fixed titles
* @Revision 12 - [20/01/2020] doglover
*	Rewrite - New website
* @Revision 11 - [01/09/2019] doglover
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=guidatv.sky.it|timezone=GMT|maxdays=7.1|cultureinfo=it-IT|charset=UTF-8|titlematchfactor=90|retry=<retry time-out="10">2</retry>}|allowlastdayoverflow}
url_index{url ()|https://apid.sky.it/gtv/v1/events?to=##end##T04%3A59%3A00Z&pageSize=999&pageNum=0&from=|urldate|T05%3A00%3A00Z&env=##ENV##&channels=##CHANNEL##}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}
scope.range{(urlindex)|end}
index_temp_3.modify {substring(type=regex)|'config_site_id' (.*?)_}
index_temp_4.modify {substring(type=regex)|'config_site_id' _(.*)}
index_variable_element.modify {calculate(format=F0)|'config_timespan_days' 1 + 24 * 60 * 60 * }
index_temp_1.modify {calculate(format=date,unix)'urldate'}
index_temp_2.modify {calculate(format=date,unix)|'index_temp_1' 'index_variable_element' +}
index_temp_2.modify {calculate(format=date,"yyyy-MM-dd")|'index_temp_2'}
url_index.modify {replace|##end##|'index_temp_2'}
url_index.modify {replace|##ENV##|'index_temp_3'}
url_index.modify {replace|##CHANNEL##|'index_temp_4'}
end_scope
*
index_showsplit.scrub {multi ()|"channel":|||}
*index_showsplit.modify { (debug)}
index_start.scrub {single|"starttime":"||Z",|",}
index_stop.scrub {single|"endtime":"||Z",|",}
index_title.scrub {single|"epgEventTitle":"||",|",}
index_title.modify {remove(type=regex)|^S\d+ Ep\d+\s-\s}
index_title.modify {remove(type=regex)|^Ep.*?\d+\s-\s}
index_title.modify {remove(type=regex)|^Ep\.\s+\d+}
index_title.modify {cleanup}
index_temp_1.scrub {single (separator="-" exclude="Ep")|"eventTitle":"||",|",}
index_temp_6.scrub {single|"programHighlights":"||",|",}
index_title.modify {addstart ('index_temp_6' = "L")|LIVE: }
index_subtitle.scrub {single (separator="-" exclude="Ep")|"contentTitle":"||",|",}
index_subtitle.modify {addend ('index_temp_1' not 'index_subtitle')|'index_temp_1'}
index_description.scrub {single()|"eventSynopsis":"||",|",}
index_description.modify {remove(type=regex)|^S\d+ Ep\d+\s}
index_description.modify {remove(type=regex)|^Ep\d+\s-\s}
index_category.scrub {multi|genre":|"name":"|"|"images}
index_title.modify {addstart ('index_title' = "")|'index_description'}
index_episode.scrub {single ()|"episodeNumber":||,"|"}
index_episode.modify {addstart ('index_episode' not "")|E}
index_temp_5.scrub {single |"seasonNumber":||,"|"}
index_temp_5.modify {addstart ('index_temp_5' not "")|S}
index_episode.modify {addstart ('index_temp_5' not "")|'index_temp_5'}


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://apid.sky.it/gtv/v1/channels?env=|subpage|}
*subpage.format {list|DTH|DTT|Fibra}
*index_temp_8.modify {set|DTH\|DTT\|Fibra}
*index_site_id.scrub {multi ()|[|||]}
*index_site_id.modify {remove (type=regex)|"category":{.*?}}
*index_temp_7.modify {set|0}
*index_temp_3.modify {clear}
*loop{(each "index_temp_5" in 'index_site_id')|end}
*index_temp_4.modify {substring(type=element)|'index_temp_8' 'index_temp_7' 1}
*index_temp_5.modify {replace|"id":|"id":'index_temp_4'_}
*index_temp_3.modify {addend|'index_temp_5'}
*index_temp_7.modify {calculate (format=F0)|'index_temp_7 1 +}
*end_loop
*index_site_id.modify {set ()|'index_temp_3'}
*index_site_channel.modify {substring (type=regex)|'index_site_id' "name":\"(.*?)\}}
*index_site_channel.modify {remove(type=regex)|"description":".*?",}
*index_site_channel.modify {replace|","number":| - }
*index_site_channel.modify {replace|,"servicekey":"| - }
*index_site_channel.modify {remove|",}
*index_site_id.modify{substring (type=regex)|'index_site_id' "id":(.*?),"logo"}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_subtitle' not "") |'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
*index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}