﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: virgintvgo.virginmedia.com
* @MinSWversion: 2.1
* @Revision 1 - [13/10/2022] doglover
*  - new website
* @Revision 0 - [31/07/2019] doglover
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=virgintvgo.virginmedia.com|timezone=UTC|maxdays=14|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
site {keepindexpage}
url_index{url ()|https://static.oesp.horizon.tv/oesp/v3/GB/eng/web/programschedules/|urldate|/|subpage|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyyMMdd} 
subpage.format{list|1|2|3|4}
*
index_variable_element.modify {set|'config_site_id'}
*
index_showsplit.scrub {multi (include="\"t\":")|"o":"'index_variable_element'"|{|}|}]}}
scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "s":(\d{13}),} 
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"s":||,|}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
end_scope
*
index_start.scrub {single ()|"s":||,|}
index_stop.scrub {single|"e":||,|}
index_title.scrub {single|"t":|"|"|}
*
index_urlshow {url ()|https://prod.oesp.virginmedia.com/oesp/v4/GB/eng/web/listings/|"i":|"|"|}}
index_urlshow.modify {addend ('index_urlshow' not "")|?byLocationId=40980&context=epg}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow.headers {customheader=X-Requested-With=XMLHttpRequest}
*
*title.scrub {single|"title":"||"|"}
title.modify {addstart|'index_title'}
subtitle.scrub {single|"secondaryTitle"|"|"|}
subtitle.scrub {single|episodeTitle: '||'|'}
category.scrub {multi(separator=",")|"categories"|"title":"|"|]}
description.scrub {single|"longDescription"|"|"}
temp_1.scrub {single|"description"|"|"}
description.modify {addstart ('description' = "")|'temp_1'}
actor.scrub {multi (separator=",")|"cast"|[|]|"directors"}
director.scrub {multi (separator=",")|"directors"|[|]|"images"}
actor.modify {remove|"}
director.modify {remove|"}
temp_2.scrub {single|"seriesNumber":"||",}
temp_2.modify {addstart ('temp_2' not "")|S}
episode.scrub {single|"seriesEpisodeNumber":"||",}
episode.modify {addstart ('episode' not "")|E}
episode.modify {addstart ('temp_2' not "")|'temp_2'}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  REGION FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://prod.oesp.virginmedia.com/oesp/v4/GB/eng/web/channels?byLocationId=40980&includeInvisible=true&personalised=false&sort=channelNumber&withStationResolutions=SD%2CHD}
*index_site_id.scrub {multi|"station":{|"id":"|"|},}
*index_site_channel.scrub {multi|"station":{|"title":"|"|},}
*index_site_channel.modify {cleanup}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
*
*For classical credits - remove the next lines
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}

subtitle.modify {addstart ('titleoriginal' not "") | ('titleoriginal')}
subtitle.modify {addend ('episode' not "") | ('episode')}
subtitle.modify {addend ('productiondate' not "") | ('productiondate')}
subtitle.modify {addstart ('category' not "") |['category'] }
subtitle.modify {addend ('rating' not "") | ['rating'] }

rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}

index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator=", " )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

description.modify {substring(type=char)|'description' 0 2300}
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}
index_description.modify {substring(type=char)|'index_description' 0 2300}
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}
