**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvguide.co.uk
* @MinSWversion: V2.1.4
* @Revision 1 - [27/10/2023] doglover
*  new website
* @Remarks: Only Sky - London   
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvguide.co.uk|timezone=UTC|maxdays=7.1|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90|ratingsystem=GB|keepindexpage|allowlastdayoverflow}
site {episodesystem=onscreen|compression=gzip}
url_index {url|https://api.tvguide.co.uk/schedules?start=|urldate|T00%3A00%3A00.000Z&end=##enddate##T23%3A59%3A59.000Z&type=grid&platformId=d3b26caa-8c7d-5f97-9eff-40fcf1a6f8d3&regionId=afa4f624-da9b-54ce-b514-570345dbbdce&platformSlug=sky&regionSlug=london}
urldate.format {datestring|yyyy-MM-dd}
url_index.headers {referer=https://www.tvguide.co.uk/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
scope.range {(urlindex)|end}
index_temp_1.modify {calculate(format=date,unix)|'urldate'}
index_temp_2.modify {calculate(format=date,unix)|'config_timespan_days' 86400 * 'index_temp_1' +}
index_temp_2.modify {calculate(format=date,"yyyy-MM-dd")|'index_temp_2'}
url_index.modify {replace|##enddate##|'index_temp_2'}
end_scope
*
global_temp_1.modify{set|'config_site_id'}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {multi ()|{"id":"'global_temp_1'",|"schedules":[|}}]},{|}}]},{}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"start_at":"||.000Z"|",}
index_stop.scrub {single|"end_at":"||.000Z"|",}
index_title.scrub {single|"title":"||",|",} 
index_temp_4.scrub {single|"summary_short":"||",|",}
index_episode.scrub {single|"season":"||",|",}
index_episode.modify {clear('index_episode' > "1000")}
index_episode.modify {addstart ('index_episode' not "")|S}
index_temp_1.scrub {single|"episode":"||"|",}
index_temp_2.scrub {single|"episode_total":"||"|",}
index_temp_1.modify {addstart ('index_temp_1' not "")|E}
index_temp_1.modify {addend ('index_temp_2' not "")|/'index_temp_2'}
index_episode.modify {addend ('index_temp_1' not "")|'index_temp_1'}
index_episode.modify {remove|}}
index_episode.modify {remove|"}
*
index_urlshow {url ()|https://www.tvguide.co.uk/schedule/|"id":"||"|"}
index_temp_3.modify {set|'index_title'}
index_temp_3.modify {cleanup(style=lower)}
index_temp_3.modify {replace| |_}
index_urlshow.modify {addend ('index_urlshow' not "")|/'index_temp_3'}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}

title.modify {set|'index_title'}
description.scrub {multi (separator="</p>")|<div class="mx-auto max-w-prose p-4 text-white">||</div>|</div>}
description.modify {cleanup(tags="<"">")}
description.modify {replace|\||\n}
description.modify {addstart ('description' = "")|'index_temp_4'}
category.scrub {multi|<div class="rounded-full bg-neutral-600 px-2">||</div>|</div>}
category.modify {cleanup(tags="<"">")}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {regex||\{"id":"([^"]*)","title":"[^"]*","logo_url"||}
*index_site_channel.scrub {regex||\{"id":"[^"]*","title":"([^"]*)","logo_url"||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_subtitle' not "") |'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
*index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('subtitle' not "") |'subtitle'}
temp_9.modify {addend ('index_temp_9' not "") | ║ 'index_temp_9'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('episode' not "") | ║ 'episode'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}
