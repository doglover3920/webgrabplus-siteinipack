**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvpassport.com
* @MinSWversion: V2
* @Revision 0 - [04/07/2018] doglover
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvpassport.com|timezone=Europe/Brussels|maxdays=10|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90}
url_index{url()|https://www.tvpassport.com/tv-listings/stations/|channel|/|urldate|}
urldate.format {datestring|yyyy-MM-dd}
*url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
index_showsplit.scrub {multi ()|<div class="panel-body station-listings|<div id="itemheader||</section>}
scope.range{(splitindex)|end}
global_temp_1.scrub {multi ()|data-st="||"data}
global_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
index_start.scrub {single ()|data-st="||"data}
index_duration.scrub {single|data-duration="||"data}
index_title.scrub {single () |"data-showName="||"data} 
index_subtitle.scrub {single () |data-episodeTitle="||"data}
index_title.modify {set ('index_title' = "Movie")|'index_subtitle'}
index_description.scrub {single |data-description="||"data}
index_category.scrub {multi (separator=",") |data-showType="||"data} 
index_actor.scrub {multi (separator=",") |data-cast="||"data} 
index_director.scrub {multi (separator=",") |data-director="||"data} 
index_productiondate.scrub {single|"data-year="||"data} 
index_actor.modify {cleanup}
index_director.modify {cleanup}
*index_showicon.scrub {single|data-showPicture="||"data|"data}
*index_showicon.modify {addstart ('index_showicon' not "")|https://cdn.tvpassport.com/image/show/960x540/}
index_episode.scrub {single|data-episodeNumber="||"data|"data}
index_episode.modify {addstart ('index_episode' not "")|E}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**	Channel creation is a bit complicated.
**	Open https://www.tvpassport.com/tv-listings in a browser
**	Select the desired line-up.  (You're viewing TV Listings for Verizon FIOS - Harrisburg, PA)
**	Save the webpage as Local TV Listings, TV Schedules and TV Guides TV Passport.htm in your work WG++ folder
**	Run the channel creation section
**	Provides you save the channels file under another name, you can run many different line-ups.  But save the resulted channels file first.
**	The channels can then be grabbed from the same config file
** @auto_xml_channel_start
*url_index{url()|file://Local TV Listings, TV Schedules and TV Guides TV Passport.htm}
*index_site_channel.scrub {multi()|<div class="channel-wrapper">|<span class="sr-only">|</|</div>}
*index_site_id.scrub {multi()|<div class="channel-wrapper">|https://www.tvpassport.com/tv-listings/stations/|"|</div>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
