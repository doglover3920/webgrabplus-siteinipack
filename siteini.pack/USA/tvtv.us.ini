**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvtv.us
* @MinSWversion: V2
*   none
* @Revision 5 - [28/09/2021] doglover
*	fixed channels creation
* @Revision 4 - [30/08/2021] doglover
*	Added logo
* @Revision 3 - [01/03/2021] doglover
*	Use of curl.  Download fails otherwise
* @Revision 2 - [30/12/2019] doglover
*	Use of a PHP script needed
* @Revision 1 - [07/09/2018] r00ty
*   Initial work on tvtv.us (and tvtv.ca separately) 
* @Remarks:
*   mostly json and on single page
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtv.us|timezone=UTC|maxdays=7|cultureinfo=en-US|charset=ISO-8859-1|episodesystem=onscreen|ratingsystem=US}
url_index{url ()|http://example.com}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}

scope.range{(urlindex)|end}
global_temp_1.modify{substring(type=regex)|'config_site_id' (.*?)/}
global_temp_2.modify{substring(type=regex)|'config_site_id' /(.*?)_#_}
global_temp_4.modify {calculate(format=date,"yyyy-MM-dd")|'urldate'}
global_temp_3.modify {set(type=run)|curl.exe|-s "https://tvtv.us/tvm/t/tv/v4/lineups/'global_temp_1'/listings/grid?detail=%27brief%27&start='global_temp_4'T00:00:00.000Z&end='global_temp_4'T23:59:00.000Z&startchan='global_temp_2'&endchan='global_temp_2'"}
global_temp_4.modify {substring (type=regex)|'global_temp_3' "listings"\:\[(.*?\})\]}
global_temp_5.modify {addend ()|'global_temp_4'}
*global_temp_5.modify {(debug)}
end_scope
**
global_temp_6.modify{substring(type=regex)|'config_site_id' _#_(.*?)}
index_urlchannellogo.modify {addstart|https://cdn.tvpassport.com/image/station/100x100/'global_temp_6'}
index_showsplit.modify {substring (type=regex)|'global_temp_5' (\"listingID\":.*?\"showHost\".*?\})}
**
scope.range{(indexshowdetails)|end}
index_start.scrub {single|"listDateTime"|:"|",|",}
index_duration.scrub {single|"duration"|:|,}
index_duration.modify {calculate(format=time)|60 /}
index_description.scrub {single|"description"|:"|",|",}
index_title.scrub {single|"showName"|:"|",|",}
index_subtitle.scrub {single|"episodeTitle"|:"|",|",}
index_title.modify {replace("Movie")|'index_title'|'index_subtitle'}
index_subtitle.modify {remove('index_title')|'index_subtitle'} 
index_category.scrub {single|"showType"|:"|",|",,}
index_rating.scrub {single|"rating"|:"|",|",}
**
** Some special handling for sports
index_temp_3.scrub {single|"team1"|:"|",|",}
index_temp_4.scrub {single|"team2"|:"|",|",}
index_temp_5.scrub {single|"location"|:"|",|",}
index_temp_6.scrub {single|"league"|:"|",|",}
index_temp_8.modify {addstart('index_temp_3' not "")|'index_temp_3'}
index_temp_8.modify {addend('index_temp_8' not "")| vs. 'index_temp_4'.}
index_description.modify {addstart('index_temp_6' not "")|'index_temp_6' }
index_description.modify {addend('index_temp_8' not "")| 'index_temp_8'}
index_description.modify {addend('index_temp_5' not "")| 'index_temp_5'}
index_subtitle.modify {addstart('index_subtitle' "")|'index_temp_8'}
index_category.modify {replace|,|\|}
index_actor.scrub {multi (separator=",")|"cast":"||",|",}
index_actor.modify {cleanup}
end_scope
**
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** Note, the 36212D is the line-up for New York DirecTV. You can get your own lineup by visiting http://tvtv.us enter your location.
** It should then load a URL like: https://tvtv.us/ny/new-york/lu36212D for which you just take everything after "lu" as your lineup ID
** Then you can add a line like the following (replacing the site_id value with your own linup:
**     <channel update="i" site="tvtv.us" site_id="36212D" xmltv_id="tvtv New York">tvtv New York</channel>
** It will then generate a channel file for your line-up
** @auto_xml_channel_start
*global_temp_1.modify{set|'config_site_id'}
*global_temp_3.modify {set(type=run)|curl.exe|-s "https://tvtv.us/tvm/t/tv/v4/lineups/'global_temp_1'"}
*index_site_id.scrub {multi|dummy}
*index_site_id.modify {substring (type=regex)|'global_temp_3' "number":"\d+",(.*?})}
*index_site_channel.modify {substring (type=regex)|'index_site_id' \"name\":\"(.*?)\",}
*index_site_channel.modify {cleanup}
*index_site_id.modify {replace |"channelNumber":|'global_temp_1'/}
*index_site_id.modify {remove (type=regex)|"subChannelNumber.*"logoFilename":"} 
*index_site_id.modify {remove (type=regex)|","stationHD.*$} 
*index_site_id.modify {replace|,""|_#_}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end


*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}

