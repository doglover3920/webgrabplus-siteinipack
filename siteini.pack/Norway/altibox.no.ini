*------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: altibox.no
* @MinSWversion: V2.1
* @Revision 6 - [23/09/2022] doglover
* @Revision 5 - [11/11/2021] doglover
* @Revision 4 - [27/09/2021] doglover
* @Revision 3 - [06/05/2021] doglover
*
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=altibox.no|timezone=Europe/Oslo|maxdays=7.1|cultureinfo=nb-NO|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow|firstshow=1}
url_index {url()|http://192.168.178.30/altibox_no.php?channel=|channel|&date=|urldate|&req=1}
urldate.format {datestring|yyyyMMdd}
*
*index_urlchannellogo {url||{"channellist":[{"contentId":"|","pictures":[{"||","}
scope.range{(splitindex)|end}
index_showsplit.scrub {regex()||{"country":".*?"channelid":".*?".*?\}||}
global_temp_1.modify {substring(type=regex)|'index_showsplit' "\"starttime\":\"(.+?)\","} 
global_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {regex(target="index_showsplit")||\"starttime\":\"(.+?)\",||}
*index_showsplit.modify{(debug)}
end_scope
index_start.scrub {single(pattern="yyyyMMddHHmmss")|"starttime":"||",|",}
*index_temp_3.scrub {regex()||"starttime":"(\d{4})||}
*index_temp_4.scrub {regex()||"starttime":"\d{4}(\d{2})||}
*index_temp_5.scrub {regex()||"starttime":"\d{6}(\d{2})||}
*index_temp_6.scrub {regex()||"starttime":"\d{8}(\d{2})||}
*index_temp_7.scrub {regex()||"starttime":"\d{10}(\d{2})||}
*index_start.modify {set ()|'index_temp_3'/'index_temp_4'/'index_temp_5' 'index_temp_6':'index_temp_7'}
*index_stop.scrub {regex(pattern="yyyyMMddHHmm")||"endtime":"(\d{12})||}
index_title.scrub {single|"name":"||",|",}
index_subtitle.scrub{single|"subName":"||",|",}
index_titleoriginal.scrub {regex(lang=en)||{"value":"([^"]*)","key":"ORIGINAL_TITLE"}||}
index_titleoriginal.modify{clear ('index_title')}
index_description.scrub {single|"introduce":"||","|","}
index_description.modify {replace|<br />|\n}
index_category.scrub {multi|"genres":"||",|",}
index_episode.scrub {single|"seasonNum":"||"|"}}  
index_temp_1.scrub {single|"subNum":"||",|",} 
index_temp_1.modify {addstart ('index_temp_1' not "") |E}
index_temp_2.scrub{single|"episodeTotalCount":"||",|",}
index_temp_2.modify{clear ('index_temp_2' = "0")}
index_temp_1.modify{addend('index_temp_2' not"")|/'index_temp_2'}
index_episode.modify {addstart ('index_episode' not "") |S}
index_episode.modify {addend ('index_temp_1' not "") |'index_temp_1'}
*index_showicon.scrub {regex||"pictures":\[\{"href":"([^"]*)"||}
index_actor.scrub{single(separator=",")|"cast":{"actor":"||"|"}
index_director.scrub{single(separator="," max=2)|"director":"||"|"}
index_producer.scrub{single(separator="," max=2)|"producer":"||"|"}
index_country.scrub{single|{"country":"||",|",}
index_premiere.scrub{regex||"isLive":"(1)",||}
index_title.modify {addstart ('index_premiere' = "1")|Live: }
*index_premiere.modify{replace|1|true}
*index_premiere.modify{addend|(lang=null)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url()|http://192.168.178.30/altibox_no.php?channel=|channel|&date=|urldate|&req=2}
*index_site_id.scrub{regex||\{"contentId":"(\d+)",".*?"name":"[^"]*"\}||}
*index_site_channel.scrub{regex||\{"contentId":"\d+",".*?"name":"([^"]*)"\}||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
* @auto_xml_channel_end

*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_subtitle.modify {addend ('index_country' not "") | ['index_country'] }
index_showicon.modify {clear}
index_urlchannellogo.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}
index_country.modify {clear}

index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}