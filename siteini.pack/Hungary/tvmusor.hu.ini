**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvmusor.hu
* @MinSWversion: V2.1
* @Revision 0 - [08/05/2023] doglover
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvmusor.hu|timezone=GMT|maxdays=7|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90}
url_index{url()|http://www.tvmusor.hu/a/get-events/}
url_index.headers {method=POST}
url_index.headers={postdata=data=%7B%22blocks%22%3A%5B%22'channel'%7C'urldate'%22%5D%7D}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index.headers {accept=text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8}
url_index.headers {contenttype=application/x-www-form-urlencoded}

urldate.format {datestring|yyyy-MM-dd}
*
scope.range{(splitindex)|end}
index_showsplit.scrub {multi()|[|{|}|]}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify{(debug)}
end_scope
*
index_start.scrub {single|"e":||,|,}
index_stop.scrub {single|"f":||,|,}
index_title.scrub {single|"j":"||",|",}
index_description.scrub {single|"c":"||",|",}
index_rating.scrub{single|"l":"||",|",}
index_rating.modify {clear ('index_rating' = "0")}
index_productiondate.scrub{single|"g":||,|,}
index_category.scrub {single|"h":"||",|",}
**
**
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL_NAME FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|http://www.tvmusor.hu/most/}
*index_site_id.scrub {multi|const CHANNEL_DATA|"id":|,|}
*index_site_channel.scrub {multi|const CHANNEL_DATA|"name":"|",|}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
*
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_subtitle.modify {addend ('index_country' not "") | ['index_country'] }
index_subtitle.modify {addend ('index_starrating' not "") | ['index_starrating'] }
index_showicon.modify {clear}
index_urlchannellogo.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_premiere.modify {clear}
index_starrating.modify {clear}
index_previousshown.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 100}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 140}

