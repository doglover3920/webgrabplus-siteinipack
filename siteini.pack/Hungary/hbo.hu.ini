**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: hbo.hu
* @MinSWversion: 2.1
* @Revision 0  - [17/02/2022] doglover
*   - creation
* @Remarks:  
* @header_end
**------------------------------------------------------------------------------------------------
site {url=hbo.hu|timezone=Europe/Budapest|maxdays=7|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=0|allowlastdayoverflow|keepindexpage}
site {loadcookie=cookies.hbo.hu.txt}
url_preload {url|https://api.ugw.hbogo.eu/v3.0/GeoCheck/json/HUN}
scope.range{(urlindex)|end}
urldate.format {datestring|yyyy-MM-dd}
url_index {url () |https://linearschedule-prod.hbogo.eu/graphql}
url_index.headers {method=POST}
url_index.headers {contenttype=application/json; charset=utf-8}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
url_index.headers {postdata={"query":"query {\n    scheduleByDayAndCountry(day: \"'urldate'T06:00:00+00:00\", country: \"hu\") {\n      country\n      channels {\n        id\n        name\n        content {\n          title_id\n          schedule_id\n          start_time\n        }\n      }\n    }\n  }"}}
end_scope

index_variable_element.modify{set|'config_site_id'}
index_showsplit.scrub {multi ()|{"id":'index_variable_element',"name":"|","content":[||]}}
index_showsplit.modify {replace|\},\{|\}\|\{}
*
*index_showsplit.modify {(debug)}
index_temp_1.scrub {single|"title_id":"||",|",}
index_start.scrub {single|"start_time":"||+|+}
index_title.scrub {single|"schedule_id":"||",|",} 
index_urlshow.modify {set|https://hbogo.hu/api/index.php/bookmarklist}
index_urlshow.headers {method=POST}
index_urlshow.headers {postdata={"isKidsSection":0,"itemList":[["title","'index_temp_1'"]]}}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
title.scrub {regex ()||"hu": \{\s+"title": "([^"]*)"||}
title.modify {addstart ('title' = "")|'index_title'}
subtitle.scrub {regex||"series_title": "([^"]*)"||}
title.modify {addstart("")|'subtitle'}
subtitle.modify {clear(~ 'title')}
titleoriginal.scrub {single(lang=en)|"en": {|"title": "|"|}}
titleoriginal.modify {clear(~ 'title')}
description.scrub {single|"log_line": "||",|",} 
description.modify {replace|\\"|"}
rating.scrub {regex||"age_rate": "(\d+)",||}
category.scrub {multi|"genres": [|"|"|]}
category.modify {cleanup(style=name)}
productiondate.scrub {single|"year": "||",|",} 
starrating.scrub {single|"imdb_rate": "||",|",}
starrating.modify {addend(not "")|(system=IMDb)}
temp_1.scrub {regex||"season_number": "(\d+)",||}
temp_1.modify{addstart(not "")|S}
temp_2.scrub {regex||"episode_number": "(\d+)",||}
temp_2.modify{addstart(not "")|E}
episode.modify {addstart()|'temp_1''temp_2'}
urlsubdetail.modify {addstart|https://hbogo.hu/api/modal/title/'index_temp_1'/ext}
urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate,br}

subdetail_description.scrub {single('description' "")|\"description\": \"||\",|\",}
subdetail_director.scrub{multi|\"director\": [|"name\": \"|\"|]}
subdetail_actor.scrub {multi|\"actor\": [|\"name\": \"|\"|]}
subdetail_country.scrub {multi|\"countryOfOrigin\": {|"name\": \"|\"|}}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_channel.scrub {regex()||{"id":\d+,"name":"([^"]*)","content"||}
*index_site_id.scrub {regex||{"id":(\d+),"name":"[^"]*","content"||}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end

*For classical credits - remove the next lines
subdetail_description.modify {addend('subdetail_director' not "" separator=", ")|\n'subdetail_director'}
subdetail_description.modify {addend('subdetail_actor' not "" separator="\n")|\n'subdetail_actor'}
subdetail_subtitle.modify {addend ('subdetail_country' not "") | ['subdetail_country'] }
subdetail_actor.modify {clear} 
subdetail_director.modify {clear}
subdetail_country.modify {clear}
*
title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}

subtitle.modify {addstart ('titleoriginal' not "") | ('titleoriginal')}
subtitle.modify {addend ('episode' not "") | ('episode')}
subtitle.modify {addend ('productiondate' not "") | ('productiondate')}
subtitle.modify {addstart ('category' not "" separator=", ") |['category'] }
subtitle.modify {addend ('rating' not "") | ['rating'] }
subtitle.modify {addend ('country' not "") | ['country'] }

rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_showicon.modify {clear}
index_urlchannellogo.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 80}
subtitle.modify {substring(type=char)|'subtitle' 0 160}

