**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: ontvtonight.com - CA
* @MinSWversion: V2.1.4
* @Revision 4 - [24/10/2025] doglover
* @Revision 3 - [06/08/2025] doglover
* @Revision 2 - [08/10/2024] doglover
* @Revision 1 - [26/11/2023] doglover
* @Revision 0 - [12/05/2020] doglover
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=ontvtonight.com|timezone=GMT|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
urldate.format {datestring|yyyy-MM-dd}
url_index{url ()|http://192.168.178.53/ontvtonight.ca.php?req=1&channel=|channel|&date=|urldate|&token=##token##}
scope.range {(urlindex)|end}
global_temp_5.modify {set('global_temp_4' = "" type=run)|curl.exe|-i "https://www.ontvtonight.com/ca/guide/" --compressed -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"  -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"  -H "Accept-Language: nl,en-US;q=0.7,en;q=0.3"  -H "Accept-Encoding: gzip, deflate, br, zstd"  -H "Connection: keep-alive"  -H "Upgrade-Insecure-Requests: 1"  -H "Sec-Fetch-Dest: document"  -H "Sec-Fetch-Mode: navigate"  -H "Sec-Fetch-Site: none"  -H "Sec-Fetch-User: ?1"  -H "Sec-GPC: 1"  -H "Priority: u=0, i"  -H "TE: trailers"}
global_temp_4.modify {substring (type=regex)|'global_temp_5' (XSRF-TOKEN=.*?);}
*global_temp_3.modify {substring (type=regex)|'global_temp_5' (otvukprod_session=.*?);}
*global_temp_2.modify {set ()|'global_temp_4'; 'global_temp_3'}
url_index.modify {replace|##token##|'global_temp_4'}
end_scope
*
index_showsplit.scrub {multi ()|<tbody>|<tr>|</tr>|</tbody>}
scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' &pid=(\d*?)&tm=} 
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
end_scope
*index_showsplit.modify { (debug)}
*
index_start.scrub {single ()|&tm=||&provider|"} 
index_start.modify {replace|%3A|:}
index_start.modify {replace|+| }
index_title.scrub {multi (includeblock="href=")|<h5 class="thin">|||</h5>} 
*index_title.scrub {regex ()||<a href=.*?">(.*?)</h5>||} 
*index_title.scrub {single ()|<a href=|rel="nofollow">|</a>|</h5>} 
index_title.modify {cleanup(tags="<"">")}
index_title.modify {remove|\n}
index_title.modify {remove (type=regex)|\(\d+\)}
index_title.modify {cleanup}

index_temp_2.scrub {url ()||<a href="||"|"}
index_urlshow.modify {addstart () |http://192.168.178.53/ontvtonight.ca.php?req=2&url='index_temp_2'&token='global_temp_4'}
*
title.modify {addstart|'index_title'}
description.scrub {single (separator="</p>")|About this Broadcast|<div class="tvbody">|</div>|<div class="schedule-attributes">}
description.modify {cleanup(tags="<"">")}
description.modify {replace|\||\n}
actor.scrub {multi (include="Actor")|<div class="single-cast-head">||</div>|</div>}
actor.modify {remove|(Actor)}
actor.modify {cleanup(tags="<"">")}
actor.modify {remove|\n}
actor.modify {replace|  .. | - }
actor.modify {cleanup}}
productiondate.scrub {multi|<div class="schedule-attributes">|<span>|</span>|</div>}
subtitle.scrub {single ()|About this Broadcast|<h4>|</h4>|<div class="tvbody">}
subtitle.modify {cleanup}
episode.scrub {single ()|About this Broadcast|<h5>|</h5>|<div class="tvbody">}
episode.modify {cleanup(tags="<"">")}
episode.modify {replace|Season |S}
episode.modify {replace|Episode |E}
episode.modify {remove| }
episode.modify {remove|,}
category.scrub {multi ()|<div class="schedule-attributes-genres">|<span>|</span>|</div>}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
** Replace in global_temp_8.modify {set|H1A1K4} H1A1K4 with your desired ZIPcode.
** Request https://www.ontvtonight.com/ca/getprovidersfromzip?zipcode=H1A1K4 in a webbrowser
** Select the id from the provider you like f.i. 	X464014514 - include the device code
** You can run more zipcodes, and the channels list can be combined
** @auto_xml_channel_start
*url_index{url ()|https://www.ontvtonight.com/ca/guide/schedule?provider=##provider##&zipcode=##zipcode##&TVperiod=Afternoon&date=|urldate|&st=0&static_page=0}
*global_temp_8.modify {set|H1A1K4}*montreal
*global_temp_7.modify {set|X464014514}*montreal
*global_temp_8.modify {set|T5A0A1}*Edmonton
*global_temp_7.modify {set|X464014417}*Edmonton
*url_index.modify {replace|##zipcode##|'global_temp_8'}
*url_index.modify {replace|##provider##|'global_temp_7'}
*index_site_id.scrub {|}
*index_temp_8.scrub {multi (excludeblock="img title")|<a href=\"https:\/\/www.ontvtonight.com\/ca\/guide\/listings\/channel||<\/a>|}
*index_site_id.modify {substring (type=regex)|'index_temp_8' (.*?)\.html}
*index_site_channel.modify {substring (type=regex)|'index_temp_8' >(.*)}
*index_site_id.modify {remove|\}
*index_site_id.modify {remove (type=regex)|^/}
*index_site_channel.modify {cleanup}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_subtitle.modify {cleanup}
index_temp_4.modify {set|'index_category'}
index_temp_5.modify {set|'index_subtitle'}
index_temp_6.modify {set|'index_episode'}
index_temp_7.modify {set|'index_productiondate'}
index_temp_8.modify {set|'index_rating'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('episode' not "") | ║ 'episode'}
temp_9.modify {addstart ('index_temp_6' not "") | ║ 'index_temp_6'}
temp_9.modify {addend ('subtitle' not "") | ║ 'subtitle'}
temp_9.modify {addend ('index_temp_5' not "") | ║ 'index_temp_5'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('index_temp_4' not "" separator=", ") | ║ 'index_temp_4'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('index_temp_7' not "") | ║ 'index_temp_7'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('index_temp_8' not "") | ║ 'index_temp_8'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 120}
subtitle.modify {substring(type=char)|'subtitle' 0 120}
index_title.modify {substring(type=char)|'index_title' 0 120}