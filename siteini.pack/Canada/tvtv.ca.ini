**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvtv.ca
* @MinSWversion: V2
*   none
* @Revision 6 - [19/09/2022] doglover
*	New website
* @Revision 5 - [17/01/2022] doglover
*	New website
* @Revision 4 - [07/04/2021] doglover
* @Revision 3 - [02/08/2020] doglover
* @Revision 2 - [30/12/2019] doglover
*	Use of a PHP script needed
* @Revision 1 - [07/09/2018] r00ty
*   Initial work on tvtv.us (and tvtv.ca separately) 
* @Remarks:
*   mostly json and on single page
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtv.ca|timezone=UTC|maxdays=7|cultureinfo=en-US|charset=UTF-8|episodesystem=onscreen|ratingsystem=CA}
urldate.format {datestring|yyyy-MM-dd}
scope.range{(urlindex)|end}
url_index {url()|http://192.168.178.30/tvtv_ca.php?reqtype=1&dataid=##prov##&date=##past##&next=##next##&channel=##chan##}   
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
url_index.headers {contenttype=application/x-www-form-urlencoded; charset=UTF-8}
url_index.headers {customheader=accept-language=en-US,en;q=0.9,en-US;q=0.8,en;q=0.7,fr;q=0.6}
url_index.headers {accept=*/*}
urldate.format {datestring|yyyy-MM-dd}
global_temp_3.modify{substring(type=regex)|'config_site_id' "##(.*?)$"}
global_temp_4.modify{substring(type=regex)|'config_site_id' "^(.*?)##"}
global_temp_5.modify{calculate( format=date,yyyy-MM-dd)|'urldate' 1:0:0 -}
global_temp_7.modify{calculate( format=date,yyyy-MM-dd)|'global_temp_5' 1:0:0 +}
url_index.modify{replace|##prov##|'global_temp_4'}
url_index.modify{replace|##chan##|'global_temp_3'}
url_index.modify{replace|##next##|'global_temp_7'}
url_index.modify{replace|##past##|'global_temp_5'}

end_scope
**
index_showsplit.scrub {multi ()|{"program|||}
*index_showsplit.modify {(debug)}
index_start.scrub {single|"startTime":"||Z",|",}
index_duration.scrub {single ()|"duration":||,|,}
*index_duration.modify {calculate (format=F0)|'index_duration' 60 /}
index_title.scrub {single|"title":"||",|",}
index_premiere.scrub {regex||"flags":\[\".*?(Live).*?\"\],||}
index_premiere.scrub {regex||"flags":\[\".*?(New).*?\"\],||}
index_premiere.modify{replace|New|true}
index_premiere.modify{replace|Live|true}
index_premiere.modify {addend|(lang=null)}
index_urlshow {url|http://192.168.178.30/tvtv_ca.php?reqtype=2&dataid=|Id":"||",|",}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
title.scrub {single|"title":"||",|",}
description.scrub{single|"description":"||",|",}
description.modify{replace|\\"|"}
productiondate.scrub{single|"releaseYear":||,"|,"}
subtitle.scrub {single|"episodeTitle":"||",|",}
category.scrub{multi(separator="","" max=3)|"genres":["||"],|"],}
showicon.scrub{url|https://tvtv.ca|"image":"||?|",}
episode.scrub{single|"seasonEpisode":"||"|"}
episode.modify {remove|"}
episode.modify {remove|;}
episode.modify {replace|Season|S}
episode.modify {replace|Episode|E}
episode.modify {remove| }
rating.scrub{single|"ratings":[|{"code":"|","|}],}
director.scrub{multi(separator="","")|directors":["||"]}
actor.scrub {multi(separator="","")|"mainCast":["||"]|"]}
showicon.scrub{url|https://tvtv.ca|"image":"||",|",}
showicon.modify {remove|?w=240&h=360}
showicon.modify {remove (type=element)|1 2}
**
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** Note, the 36212D is the line-up for New York DirecTV. You can get your own lineup by visiting http://tvtv.us enter your location.
** It should then load a URL like: https://tvtv.ca/on/toronto/luCAN-0005980-X for which you just take everything after "lu" as your lineup ID
** Then you can add a line like the following (replacing the site_id value with your own linup:  (the value after lu)
**     <channel update="i" site="tvtv.ca" site_id="CAN-0005980-X" xmltv_id="tvtv Toronto">tvtv Toronto</channel>
** It will then generate a channel file for your line-up
** @auto_xml_channel_start
*global_temp_1.modify {set|'config_site_id'}
*global_temp_3.modify {set(type=run)|curl.exe|-s "https://tvtv.ca/api/v1/lineup/'global_temp_1'/channels}
*index_site_id.scrub {multi|dummy}
*index_site_id.modify {substring (type=regex)|'global_temp_3' "stationId":".*?\}}
*index_site_channel.modify {substring (type=regex)|'index_site_id' \"stationCallSign\":\"(.*?)\",}
*index_site_id.modify {substring (type=regex)|'index_site_id' \"stationId\":\"(.*?)\",}
*index_site_id.modify {addstart|'global_temp_1'##}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}

subtitle.modify {addstart ('titleoriginal' not "") | ('titleoriginal')}
subtitle.modify {addend ('episode' not "") | ('episode')}
subtitle.modify {addend ('productiondate' not "") | ('productiondate')}
subtitle.modify {addstart ('category' not "" separator=", ") |['category'] }
subtitle.modify {addend ('rating' not "") | ['rating'] }
subtitle.modify {addend ('country' not "") | ['country'] }

showicon.modify {clear}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_subtitle.modify {addstart ('index_titleoriginal' not "") | ('index_titleoriginal')}
index_subtitle.modify {addend ('index_episode' not "") | ('index_episode')}
index_subtitle.modify {addend ('index_productiondate' not "") | ('index_productiondate')}
index_subtitle.modify {addstart ('index_category' not "" separator=", ") |['index_category'] }
index_subtitle.modify {addend ('index_rating' not "") | ['index_rating'] }
index_subtitle.modify {addend ('index_country' not "") | ['index_country'] }
index_showicon.modify {clear}
index_urlchannellogo.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 100}
subtitle.modify {substring(type=char)|'subtitle' 0 140}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 100}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 140}