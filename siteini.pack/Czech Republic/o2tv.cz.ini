﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: o2tv.cz
* @MinSWversion: V2.1.4
* @Revision 7 - [18/03/2024] doglover
*  - adaption to WG++ 2.1.4
* @Revision 6 - [17/03/2024] Blackbear199
*  - rewrite
* @Revision 5 - [15/01/2022] Blackbear199
*  - url change(www to api)
* @Revision 4 - [02/09/2020] Blackbear199
*  - episode info improvements
* @Revision 3 - [25/08/2019] Blackbear199
*  -channel logo fix
* @Revision 2 - [13/03/2019] Blackbear199
*  - start/stop time fix
* @Revision 1 - [22/11/2018] Blackbear199
*  - desc fix
* @Revision 0 - [14/02/2018] Blackbear199
*  - creation
* @Remarks: for short description,disable index_temp_1.scrub line(add a * to the beginning)
* @header_end
**------------------------------------------------------------------------------------------------
site {url=o2tv.cz|timezone=UTC|maxdays=7.1|cultureinfo=cs-CZ|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
urldate.format {datestring|yyyy-MM-dd}
scope.range {(urlindex)|end}
url_index {url ()|http://192.168.178.53/o2tv_cz.php?req=1&channel=##channel##&startdate=##startdate##&enddate=##enddate##}
global_temp_8.modify {substring(type=regex)|'config_site_id' "^(\d+)##"}
global_temp_1.modify {calculate(format=date,zzz)|'now'}
global_temp_2.modify {substring(type=regex)|'global_temp_1' (\d\d):}
global_temp_2.modify {calculate(format=F0)|'global_temp_2' 3600 *}
global_temp_3.modify {calculate(format=date,unix)|'urldate' 'global_temp_2' +}
global_temp_4.modify {calculate(format=date,unix)|'config_timespan_days'  1 + 86400 * 'global_temp_3' + 60 -}
url_index.modify {replace|##startdate##|'global_temp_4'}
url_index.modify {replace|##enddate##|'global_temp_3'}
url_index.modify {replace|##channel##|'global_temp_8'}
end_scope
*
index_showsplit.scrub {regex||"objects":\s*\[(.*?)\]\}\}$||}
scope.range {(splitindex)|end}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify {replace(type=regex)|"\}(,) \{\"objectType\": \"KalturaProgramAsset\""|\|}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
end_scope
*index_showsplit.modify {(debug)}
index_start.scrub {single|"startDate":||,|,}
index_stop.scrub {single|"endDate":||,|,}
index_title.scrub {single|"name": "||",|",}
index_subtitle.scrub {single|"EpisodeName": {|"value": "|"}|"}}
index_description.scrub {single|"description": "||", "|", "}
index_category.scrub {single|"ContentType": {|"value": "|"|}}
index_director.scrub {multi|"Director": {|"value": "|"|]}}
index_actor.scrub {multi|"Actors": {|"value": "|"|]}}
index_producer.scrub {multi(max=2)|"Producers": {|"value": "|"|]}}
index_writer.scrub {multi(max=2)|"Writers": {|"value": "|"|]}}
index_episode.scrub {single()|"EpisodeNumber": {|"value": "|"|}}
index_country.scrub {multi|"Country": {|"value": "|"|]}}
index_productiondate.scrub {single|"Year": {|"value": "|"|}}
index_temp_1.scrub {single|"DescLong": {|"value": "|"}|"}} *disable for short description(add a * to beginning of line)
index_temp_2.scrub {single|"SeasonNumber": {|"value": "|"|}}
index_temp_3.scrub {multi|"Genre": {|"value": "|"|]}}
*
index_description.modify {set('index_temp_1' not "")|'index_temp_1'}
index_description.modify {remove|\\n}
index_category.modify {addend(not "sport")|\|'index_temp_3'}
index_category.modify {cleanup(style=name)}
index_episode.modify {addstart(not "")|E}
index_episode.modify {addstart('index_temp_2' not "")|S'index_temp_2'}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url ()|http://192.168.178.53/o2tv_cz.php?req=2}
*index_site_id.scrub {regex||"id": (\d+), "images":||}
*index_site_channel.scrub {multi|"name": "||",|",}
*index_site_id.modify {addend|##}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_description.modify {addend ('index_director' not "" separator=", " )|\n'index_director'}
index_description.modify {addend ('index_actor' not "" separator="\n" )|\n'index_actor'}
index_description.modify {addend ('index_presenter' not "" separator=", " )|\n'index_presenter'}

index_temp_9.modify {addstart ('index_subtitle' not "") |'index_subtitle'}
index_temp_9.modify {addend ('index_titleoriginal' not "") | ║ 'index_titleoriginal'}
index_temp_9.modify {addend ('index_category' not "" separator=", ") | ║ 'index_category'}
index_temp_9.modify {addend ('index_episode' not "") | ║ 'index_episode'}
index_temp_9.modify {addend ('index_productiondate' not "") | ║ 'index_productiondate'}
index_temp_9.modify {addend ('index_rating' not "") | ║ 'index_rating'}
index_temp_9.modify {addend ('index_country' not "" separator=", ") | ║ 'index_country'}
index_temp_9.modify {remove (type=regex)|^ ║ }
index_subtitle.modify {set ('index_temp_9' not "")|'index_temp_9'}
*index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_country.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
loop{('index_temp_2' > "2300")|end}
index_description.modify {remove(type=sentence)|-1 1}
index_temp_2.modify {calculate(format=F0 type=char)|'index_description' #}
end_loop
index_title.modify {substring(type=char)|'index_title' 0 80}
index_subtitle.modify {substring(type=char)|'index_subtitle' 0 160}