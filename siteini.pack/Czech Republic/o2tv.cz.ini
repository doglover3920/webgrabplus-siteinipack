**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: o2tv.cz
* @MinSWversion: V2.1
* @Revision 2 - [02/08/2021] doglover
*	url change - api instead of www
* @Revision 1 - [12/03/2021] doglover
*	Fixed download detail pages (url change)
* @Revision 0 - [20/04/2019] doglover
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=www.o2tv.cz|timezone=UTC|maxdays=7|cultureinfo=cs-CZ|charset=UTF-8|titlematchfactor=90|keepindexpage}
url_index{url ()|https://api.o2tv.cz/unity/api/v1/epg/depr/?forceLimit=true&from=##start##000&limit=500&to=##end##000}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datenumber|unix|0}
scope.range{(urlindex)|end}
index_temp_1.modify {calculate(format=date,unix)|'urldate' 00:03 +}
url_index.modify {replace|##start##|'index_temp_1'}
index_temp_2.modify {calculate(format=date,unix)|'index_temp_1' 01:00 +}
url_index.modify {replace|##end##|'index_temp_2'}
end_scope
index_variable_element.modify {set|'config_site_id'}
index_showsplit.scrub {multi () |"channelKey":"'index_variable_element'|"epgId"||]}

scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' ":\d{8},"} 
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
end_scope

index_start.scrub {single ()|"start":||,|}
index_stop.scrub {single ()|"end":||,|}
index_title.scrub {single|"name":"||",|}

index_urlshow {url ()|https://api.o2tv.cz/unity/api/v1/programs/|:||,|}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
title.scrub {single|"name":"||",|}
titleoriginal.scrub {single|"origName":"||",|}
subtitle.scrub {single ()|"seriesInfo":|"episodeName":"|",|}
description.scrub {multi ()|"longDescription":"||","|}
temp_1.scrub {single ()|"shortDescription":"||",|}
description.modify {addend('description' = "")|'temp_1'}
director.scrub {multi|"directors":|"name":"|"|]}
actor.scrub {multi|"cast":|"name":"|"|]}
category.scrub {multi|"genres"|"name":"|"|]}
productiondate.scrub {single|"year":||,"|
country.scrub {multi|"country":|"name":"|"|}}

episode.scrub {single ()|"episodeNumber":||,"|"}
episode.modify {addstart ('episode' not "")|E}
temp_4.scrub {single |"seasonNumber":||,"|"}
temp_4.modify {addstart ('temp_4' not "")|S}
temp_5.scrub {single |"episodesInSeason":||,"|"}
temp_5.modify {addstart ('temp_5' not "")|/}
episode.modify {addstart ('temp_4' not "")|'temp_4'}
episode.modify {addend ('temp_5' not "")|'temp_5'}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {multi|"channelKey":"||"|",}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_channel.modify {cleanup}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
