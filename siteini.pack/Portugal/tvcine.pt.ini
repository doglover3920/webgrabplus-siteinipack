**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvcine.pt
* @MinSWversion: V2.1.4
* @Revision 0 - [04/01/2023] doglover
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvcine.pt|timezone=Europe/Lisbon|maxdays=7.1|cultureinfo=pt-PT|charset=UTF-8|titlematchfactor=90|keepindexpage}
urldate.format {datestring|yyyy-MM-dd}
url_index{url ()|https://api-tvcine.com/content/emissoes/range?dateStart=|urldate|%2000:00&dateEnd=##enddate##%2004:00&timezone=Europe/Lisbon}
url_index.headers   {customheader=Accept-Encoding=gzip,deflate}

scope.range{(urlindex)|end}
global_temp_5.modify {set|'config_site_id'}
index_temp_1.modify {calculate(format=date,unix)|'urldate'}
index_temp_2.modify {calculate(format=date,unix)|'config_timespan_days'  1 + 86400 * 'index_temp_1' +}
index_temp_2.modify {calculate(format=date,"yyyy-MM-dd")|'index_temp_2'}
url_index.modify {replace|##enddate##|'index_temp_2'}
end_scope
*
scope.range {(splitindex)|end}
index_showsplit.scrub {multi () |"canal":"'global_temp_5'"|{|}|]},}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"dataEmissao":"||Z|",}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"dataEmissao":"||Z|",}
index_title.scrub {single ()|"tituloPT":"||"|",}
index_temp_7.scrub {single|"temporada":"||"|",}
index_episode.modify {addstart ('index_temp_7' not "")|S'index_temp_7'}
index_temp_6.scrub {single|"episodio":"||"|",}
index_episode.modify {addend ('index_temp_6' not "")|E'index_temp_6'}
index_category.scrub {single|"area":"||"|",}
index_variable_element.modify {set()|"temporada":"'index_temp_7'","episodio":"'index_temp_6'"}
index_showicon.scrub {single|"imgCapa":"||"|",}

index_urlshow {url ()|https://api-tvcine.com/content/catalogo/detalhe/|"slug":"||"|",}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
*
scope.range{(showdetails)|end}
title.scrub {single ()|"emissoes":[|"titulo":"|",|}
*title.modify {addstart|'index_title'}
titleoriginal.scrub {single ()|"emissoes":[|"tituloOriginal":"|",|}
titleoriginal.modify {clear ('titleoriginal' = 'title')}
description.scrub{single|"tituloOriginal":"|"sinopse":"|",|}
temp_4.scrub {single (includeblock="'index_variable_element'")|{"emissoes":|||}
temp_5.modify {substring (type=regex)|'temp_4' "sinopse":"(.*?)",}
subtitle.modify {substring (type=regex)|'temp_4' "tituloEpisodio":"(.*?)",}
productiondate.scrub {single|"ano":||,|,}
description.modify {addend('temp_5' not "")|\n\n'temp_5'}
director.scrub {multi (separator=",")|"realizador":"||"|",}
actor.scrub {multi (separator=",")|"cast":"||"|",}
productiondate.scrub {single|<h4>Gyártási év</h4>||<|}
rating.scrub {single|"tituloOriginal":"|"classificacao":"|"|",}
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {multi|"canal":"||"|",}
*index_site_channel.scrub {multi|"canal":"||"|",}
** @auto_xml_channel_end
