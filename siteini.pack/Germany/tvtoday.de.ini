**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvtoday.de
* @MinSWversion: v2.1.4
* @Revision 23 - [02/11/2024] doglover
*	
* @Remarks: 
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtoday.de|timezone=UTC|maxdays=12.1|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90}
url_index {url|https://www.tvtoday.de/programm/standard/sender/|channel|.html}
*url_index.headers {customheader=Accept-Encoding=deflate,br}
*
global_temp_6.modify {calculate(format=utcdate,unix)|'now'}
scope.range {(splitindex)|end}
index_showsplit.scrub {multi ()|<div class="tv-show-container js-tv-show-container">|||</section>}
index_showsplit.modify {replace|!??!|#}
index_showsplit.modify {replace|\||#}
index_showsplit.modify {substring (type=regex)|'index_showsplit' (href=.*?)</a>}
global_temp_4.modify {substring (type=regex)|'index_showsplit' (data-start-time=".*?)"}
global_temp_4.modify {cleanup (removeduplicates=equal,100 span=3 link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {regex(target="index_showsplit")||(data-start-time=".*?)"||}
loop{(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' data-start-time="(.*?)"}
index_showsplit.modify {remove('index_temp_8' < 'global_temp_6')|'index_temp_9'}
end_loop
end_scope
*index_showsplit.modify {(debug)}
*
index_start.scrub {single|data-start-time="||"|"}
index_stop.scrub {single|data-end-time="||"|"}
index_title.scrub {single|<p class="h7 name">||</p>|</p>}
index_category.scrub {regex||name">[^<]*<\/p><p\sclass="small-meta\sdescription">([^,]*),||}
index_category.modify {replace (type=regex)|<.*?>| }
index_country.scrub {regex||name">[^<]*<\/p><p\sclass="small-meta\sdescription">[^,]*,(.+?)\d{4}||}
index_country.modify {replace|/|\|}
index_country.modify {substring(type=element)|0 2}
index_temp_1.scrub {single|<p class="small-meta description">||</p>|</p>}
index_temp_2.scrub {single|<span class="element" data-style="elements/tv-show-mark">||</span>|</span>}
index_title.modify {addstart ('index_temp_2' ~ "live")|LIVE:}
index_subtitle.scrub {regex||<p\sclass="small-meta description">([^<]*)<\/p><\/*div||}
index_productiondate.modify {calculate(format=productiondate)|'index_temp_1'}
index_subtitle.modify {clear(~ 'index_productiondate')}
index_starrating.scrub {single|data-rating="||"|"}
index_starrating.modify {addend(not "")|/3}
index_urlshow {url|https://www.tvtoday.de|href="||"|"}
*index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
title.modify {addstart|'index_title'}
titleoriginal.scrub {single|Originaltitel</div>|>|</div>|</div>}
titleoriginal.modify {clear(~ 'title')}
description.scrub {multi|<p class="main-copy">||</p>|</p>}
description.modify {remove(type=regex)|<div class="banner-container">.*$}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
description.modify {remove|(Senderinfo)}
*showicon.scrub {regex||<meta\sproperty="og:image"\s+content="([^"]*)"\/>||}
director.scrub {single(separator=", ")|Regisseur</div>|>|</div>|</div>}
actor.scrub {multi|Darsteller</h3>|<div class="row">||<div class="additional-buttons">}
actor.modify {cleanup}
actor.modify {replace| <div class="cell">| - }
actor.modify {cleanup(tags="<"">")}
*composer.scrub {single(separator=", " max=2)|Musik</div>|>|</div>|</div>}
rating.scrub {single|Altersfreigabe</div>|>|</div>|</div>}
rating.modify{replace|6 Jahre|FSK 6}
rating.modify{replace|12 Jahre|FSK 12}
rating.modify{replace|14 Jahre|FSK 14}
rating.modify{replace|16 Jahre|FSK 16}
rating.modify{replace|18 Jahre|FSK 18}
episode.scrub {multi (include="Folge")|<ul class="additional-infos extra">|<li class="h8">|</li>|</ul>}
episode.modify {replace|Folge |E}
episode.modify {replace|St. |S}
episode.modify {remove|,}
episode.modify {remove| }
episode.modify {remove|\|}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://www.tvtoday.de/programm/standard/sender/}
*index_site_id.scrub {multi|<div class="container mediathek">|/programm/standard/sender/|.html|<div class="col-4">}
*index_site_channel.scrub {multi|<div class="container mediathek">|title="|"|<div class="col-4">}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
*For classical credits - remove the next lines
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_category.modify {cleanup(removeduplicates)}
index_category.modify {cleanup}
index_subtitle.modify {cleanup}
index_temp_4.modify {set|'index_category'}
index_temp_5.modify {set|'index_subtitle'}
index_temp_6.modify {set|'index_episode'}
index_temp_7.modify {set|'index_productiondate'}
index_temp_8.modify {set|'index_rating'}
index_subtitle.modify {clear}
index_writer.modify  {clear}
index_rating.modify {clear}
index_productiondate.modify {clear}
index_titleoriginal.modify {clear}
index_actor.modify {clear}
index_director.modify {clear}
index_presenter.modify {clear}
index_episode.modify {clear}
index_category.modify {clear}
index_videoquality.modify {clear}

title.modify {remove|\}
subtitle.modify {remove|\}
description.modify {remove|\}
category.modify {cleanup(removeduplicates)}
category.modify {cleanup}
actor.modify {cleanup}
director.modify {cleanup}
actor.modify {replace|\|\||\|}
description.modify {addend('director' not "" separator=", ")|\n'director'}
description.modify {addend('actor' not "" separator="\n")|\n'actor'}
actor.modify {clear} 
director.modify {clear}
temp_9.modify {addstart ('episode' not "") | ║ 'episode'}
temp_9.modify {addstart ('index_temp_6' not "") | ║ 'index_temp_6'}
temp_9.modify {addend ('subtitle' not "") | ║ 'subtitle'}
temp_9.modify {addend ('index_temp_5' not "") | ║ 'index_temp_5'}
temp_9.modify {addend ('titleoriginal' not "") | ║ 'titleoriginal'}
temp_9.modify {addend ('category' not "" separator=", ") | ║ 'category'}
temp_9.modify {addend ('index_temp_4' not "" separator=", ") | ║ 'index_temp_4'}
temp_9.modify {addend ('country' not "" separator=", ") | ║ 'country'}
temp_9.modify {addend ('productiondate' not "") | ║ 'productiondate'}
temp_9.modify {addend ('index_temp_7' not "") | ║ 'index_temp_7'}
temp_9.modify {addend ('rating' not "") | ║ 'rating'}
temp_9.modify {addend ('index_temp_8' not "") | ║ 'index_temp_8'}
temp_9.modify {remove (type=regex)|^ ║ }
subtitle.modify {set ('temp_9' not "")|'temp_9'}
rating.modify {clear}
episode.modify {clear}
category.modify {clear}
productiondate.modify {clear}
titleoriginal.modify {clear}
writer.modify {clear}
producer.modify {clear}
composer.modify {clear}
starrating.modify {clear}
rating.modify {clear}
presenter.modify {clear} 
starrating.modify {clear}
videoquality.modify {clear}
videoaspect.modify {clear}
country.modify {clear}

temp_2.modify {calculate(format=F0 type=char)|'description' #}
loop{('temp_2' > "2300")|end}
description.modify {remove(type=sentence)|-1 1}
temp_2.modify {calculate(format=F0 type=char)|'description' #}
end_loop
title.modify {substring(type=char)|'title' 0 120}
subtitle.modify {substring(type=char)|'subtitle' 0 120}
index_title.modify {substring(type=char)|'index_title' 0 120}